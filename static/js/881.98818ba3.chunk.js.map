{"version":3,"file":"static/js/881.98818ba3.chunk.js","mappings":"4NACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA6H,yB,6BCQ9G,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAqBI,OACA,kBAAMC,SAlBW,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAY,CAChBP,KAAMA,EACNE,OAAQA,GAENN,EAASY,MAAK,SAAAC,GAAO,OAAIA,EAAQT,OAASO,EAAUP,IAA/B,IACjBU,MAAM,GAAD,OAAIV,EAAJ,6BAGXN,GAASiB,EAAAA,EAAAA,IAAWJ,IACpBN,EAAQ,IACRE,EAAU,IACb,EAK+BS,UAAWC,EAAzC,WACJ,mBAAOD,UAAWC,EAAlB,kBAEC,kBACIC,KAAK,OACLd,KAAK,OACLe,MAAQf,EACRgB,SAAU,SAAAX,GAAC,OAAIJ,EAAQI,EAAEY,OAAOF,MAArB,EACXH,UAAWC,EACXK,QAAQ,yHACRC,MAAM,uJACNC,UAAQ,QAGb,mBAAOR,UAAWC,EAAlB,oBAEA,kBACKC,KAAK,MACLd,KAAK,SACLe,MAAQb,EACRc,SAAU,SAAAX,GAAC,OAAIF,EAAUE,EAAEY,OAAOF,MAAvB,EACXH,UAAWC,EACXK,QAAQ,gGACRC,MAAM,sGACNC,UAAQ,QAGZ,mBAAQR,UAAWC,EAAnB,2BAGE,CChEP,MAA4B,0BAA5B,EAA6D,qBAA7D,EAA0F,sB,UCI3E,SAASQ,IACtB,IAAM3B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKiB,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,oCAGA,kBACAC,KAAK,OACLE,SAXW,SAAAX,GACfX,GAAS4B,EAAAA,EAAAA,GAAUjB,EAAEkB,cAAcR,OACpC,EAUKH,UAAWC,MAGhB,CCvBD,MAAuB,0BAAvB,EAA0D,4BAA1D,EAA6F,0BCK9E,SAASW,IACxB,IAAM9B,GAAWC,EAAAA,EAAAA,MACX8B,GAAkB5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAElC,OACE,eAAId,UAAWC,EAAf,SACCY,EAAgBE,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,gBAAgBU,UAAWC,EAA3B,UACUb,EADV,IACiBE,GACjB,mBACAY,KAAK,SACLe,QAAS,kBAAMnC,GAASoC,EAAAA,EAAAA,IAAcF,GAA7B,EACThB,UAAWC,EAHX,sBAFYe,EADQ,KAcxB,CCzBD,MAAuB,uBCSR,SAASG,IACtB,IAAMrC,GAAWC,EAAAA,EAAAA,MACXqC,GAAYnC,EAAAA,EAAAA,IAAYoC,EAAAA,IACxBC,GAAQrC,EAAAA,EAAAA,IAAYsC,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACR1C,GAAS2C,EAAAA,EAAAA,MACV,GAAE,CAAC3C,KAGF,4BACA,eAAIkB,UAAWC,EAAf,wBACA,SAACpB,EAAD,KACA,eAAKmB,UAAWC,EAAhB,uBACA,SAACQ,EAAD,IACCW,IAAcE,IAAS,mDACxB,SAACV,EAAD,MAGH,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import React from \"react\";\nimport css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\n\n\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n\n\n      const handleSubmit=e=> {\n        e.preventDefault();\n        const contactEl = {\n          name: name,\n          number: number,\n        };\n        if (contacts.find(contact => contact.name === contactEl.name)) {\n                alert(`${name} is already in contacts`);\n                  return;\n             }\n          dispatch(addContact(contactEl));\n          setName('');\n          setNumber('');\n      }\n\n\n      \n        return (\n        <form onSubmit={handleSubmit} className={css.form}>\n    <label className={css.label}>\n         Name\n     <input\n         type=\"text\"\n         name=\"name\"\n         value={ name }\n         onChange={e => setName(e.target.value)}\n         className={css.input}\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n         title=\"Name may contain only letters, apostrophe, dash        and spaces. For example Adrian, Jacob Mercer, Charles de        Batz de Castelmore d'Artagnan\"\n         required\n       />\n    </label>\n    <label className={css.label}>\n         Number\n    <input\n         type=\"tel\"\n         name=\"number\"\n         value={ number }\n         onChange={e => setNumber(e.target.value)}\n         className={css.input}\n         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.       \\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n         title=\"Phone number must be digits and can contain        spaces, dashes, parentheses and can start with +\"\n         required\n    />\n     </label>\n     <button className={css.btn}>Add contact</button>\n    </form>\n        )\n      }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};"," import css from './Filter.module.css'\n import { useDispatch } from 'react-redux';\n import { setFilter } from 'redux/contacts/filterSlice';\n\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n\nconst onChange = e => {\n  dispatch(setFilter(e.currentTarget.value));\n};\n\n  return (\n    <div className={css.container}>\n      <p className={css.text}>  \n         Find contacts by name\n      </p>  \n      <input \n      type=\"text\"  \n      onChange={onChange}\n      className={css.input} />\n    </div>\n  );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"button\":\"ContactList_button__7kL4l\",\"item\":\"ContactList_item__EZYHO\"};","import React from \"react\";\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport default function ContactList() {\nconst dispatch = useDispatch();\nconst visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n    {visibleContacts.map(({ id, name, number }) =>\n    (<li  key = {id} className={css.item}>\n              {name}:{number}\n     <button\n     type=\"button\"\n     onClick={() => dispatch(deleteContact(id))}\n     className={css.button}\n     >\n      Delete\n     </button>\n        </li>\n        ))}\n</ul>\n  )\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contacts_text__kop-x\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading, selectError } from 'redux/contacts/selectors';\nimport css from './Contacts.module.css';\n\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n    <h1 className={css.text}>Phonebook</h1>\n    <ContactForm  />\n    <h2  className={css.text}>Contacts</h2>\n    <Filter />\n    {isLoading && !error && <b>Request in progress...</b>}\n    <ContactList />\n    </div>\n  )\n}\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","contactEl","find","contact","alert","addContact","className","css","type","value","onChange","target","pattern","title","required","Filter","setFilter","currentTarget","ContactList","visibleContacts","selectVisibleContacts","map","id","onClick","deleteContact","Tasks","isLoading","selectLoading","error","selectError","useEffect","fetchContacts"],"sourceRoot":""}